using System;
using System.IO;
using iTextSharp.text;
using iTextSharp.text.pdf;

class Program
{
    static void Main()
    {
        try
        {
            string[] pdfs =
            {
                "30744",
                "30754",
                "30758",
                "33149",
                "33450",
                "33413",
                "33253",
                "33153",
                "33411",
                "33196",
                "33058",
                "33059",
                "33922",
                "33356",
                "33970",
                "33299",
                "33274",
                "33314",
                "33969",
                "33096",
                "33373",
                "33850",
                "33920",
                "33316",
                "33441",
                "33489",
                "32930",
                "33861",
                "33224",
                "32960",
                "33281",
                "33984",
                "33759",
                "33282",
                "33380",
                "33587",
                "33104",
                "33377",
                "33173",
                "33361",
                "33851",
                "30866",
                "33396",
                "33326",
                "33052",
                "33039",
                "33345",
                "33198",
                "33575",
                "33068",
                "33346",
                "33337",
                "33133",
                "33362",
                "33700",
                "33847",
                "33789",
                "33071",
                "33206",
                "32917",
                "33408",
                "33172",
                "32903",
                "33372",
                "33671",
                "33836",
                "33191",
                "33308",
                "33781",
                "33252",
                "33505",
                "33830",
                "33815",
                "33293",
                "31100",
                "32852",
                "33846",
                "33692",
                "33924",
                "33793",
                "33929",
                "34021",
                "33697",
                "33295",
                "33311",
                "33387",
                "33593",
                "33979",
                "33215",
                "33905",
                "33092",
                "33239",
                "33108",
                "33665",
                "32900",
                "33219",
                "33062",
                "33210",
                "33485",
                "33119",
                "33867",
                "33124",
                "31099",
                "33921",
                "33381",
                "33033",
                "30942",
                "33910",
                "33857",
                "33260",
                "33132",
                "33603",
                "33111",
                "33203",
                "33578",
                "30976",
                "33279",
                "33592",
                "33290",
                "33243",
                "33545",
                "33302",
                "33063",
                "33934",
                "33996",
                "33312",
                "33297",
                "33933",
                "33948",
                "33214",
                "33990",
                "33511",
                "33037",
                "33608",
                "32328",
                "32409",
                "32186",
                "32301",
                "32091",
                "31992",
                "32145",
                "32241",
                "32082",
                "32076",
                "31382",
                "32098",
                "31776",
                "32411",
                "32474",
                "31865",
                "31877",
                "31870",
                "32194",
                "32498",
                "31492",
                "32431",
                "32422",
                "32367",
                "32160",
                "31523",
                "32116",
                "32335",
                "30572",
                "31997",
                "32515",
                "32054",
                "32264",
                "32027",
                "32134",
                "32023",
                "32036",
                "31520",
                "32081",
                "31853",
                "32153",
                "31963",
                "32097",
                "32346",
                "30397",
                "32199",
                "32423",
                "31632",
                "31955",
                "31953",
                "32157",
                "32063",
                "30547",
                "32452",
                "32323",
                "31952",
                "32215",
                "30482",
                "32114",
                "30642",
                "30653",
                "32458",
                "32419",
                "30426",
                "32477",
                "32450",
                "32322",
                "32397",
                "31558",
                "32416",
                "30452",
                "32523",
                "31797",
                "32137",
                "32255",
                "31903",
                "32242",
                "30438",
                "32142",
                "32370",
                "32151",
                "31878",
                "32484",
                "32356",
                "31882",
                "32327",
                "32251",
                "32522",
                "30669",
                "32386",
                "32491",
                "31962",
                "31841",
                "32344",
                "32497",
                "32599",
                "30372",
                "32408",
                "31950",
                "32536",
                "32429",
                "32369",
                "31973",
                "32256",
                "32067",
                "30460",
                "32405",
                "32307",
                "31378",
                "31335",
                "31678",
                "32144",
                "31766",
                "32314",
                "30431",
                "32093",
                "31951",
                "32107",
                "31876",
                "32270",
                "31637",
                "31845",
                "32377",
                "32162",
                "31948",
                "32244",
                "31486",
                "30590",
                "32404",
                "32304",
                "31917",
                "32087",
                "32230",
                "30463",
                "32261",
                "32382",
                "32143",
                "30645",
                "30632",
                "32517",
                "32005",
                "32464",
                "32275",
                "30488",
                "31844",
                "32190",
                "32286",
                "30631",
                "31897",
                "32399",
                "31905",
                "30568",
                "31403",
                "31965",
                "32448",
                "32444",
                "32540",
                "31872",
                "31507",
                "32135",
                "32365",
                "32595",
                "31909",
                "32002",
                "32164",
                "31939",
                "32310",
                "32156",
                "31911",
                "32022",
                "30433",
                "31864",
                "31884",
                "31949",
                "32326",
                "32378",
                "31629",
                "32383",
                "32401",
                "32490",
                "30562"
            };
            string[] localFilePaths;

            for (int i = 0; i < pdfs.Length; i++)
            {
                localFilePaths = new string[2]
                {
                    $"pdfs/{pdfs[i]}-1.pdf",
                    $"pdfs/{pdfs[i]}-2.pdf"
                };
                string mergedFilePath = $"merged/{pdfs[i]}-merged.pdf";
                MergePDFs(localFilePaths, mergedFilePath);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    static void MergePDFs(string[] filesToMerge, string outputFilePath)
    {
        try
        {
            using (FileStream stream = new FileStream(outputFilePath, FileMode.Create))
            {
                Document document = new Document();
                PdfCopy pdf = new PdfCopy(document, stream);
                document.Open();

                foreach (string file in filesToMerge)
                {
                    PdfReader reader = new PdfReader(file);

                    for (int page = 1; page <= reader.NumberOfPages; page++)
                    {
                        PdfImportedPage importedPage = pdf.GetImportedPage(reader, page);
                        pdf.AddPage(importedPage);
                    }

                    reader.Close();
                }

                pdf.Close();
                document.Close();
            }
        }
        catch
        {
            throw;
        }
    }

    static void DownloadFile(string url, string localFilePath)
    {
        try
        {
            using (HttpClient client = new HttpClient())
            {
                using (HttpResponseMessage response = client.GetAsync(url).Result)
                {
                    using (HttpContent content = response.Content)
                    {
                        Stream stream = content.ReadAsStreamAsync().Result;
                        using (FileStream fileStream = new FileStream(localFilePath, FileMode.Create))
                        {
                            stream.CopyTo(fileStream);
                        }
                    }
                }
            }
        }
        catch
        {
            throw;
        }
    }
}
